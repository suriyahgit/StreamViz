services:
  db:
    image: ghcr.io/stac-utils/pgstac:v0.9.5
    container_name: stac-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${PG_DATA}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

  stac-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stac-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      STAC_API_PORT: ${STAC_API_PORT}

      # Optional legacy vars
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      # âœ… Required for stac-fastapi.pgstac >= 6.0.0
      PGHOST: db
      PGPORT: ${POSTGRES_PORT}
      PGDATABASE: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}

    command: ["/usr/local/bin/start-stac.sh"]
    ports:
      - "${STAC_API_PORT}:8081"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - stac-api
    command: ["bash", "-c", "while true; do sleep 3600; done"]
    volumes:
      - .:/app

  dash:
    build:
      context: .
      dockerfile: Dockerfile.dash
    container_name: plot-dash
    environment:
      PLOT_DUMP_DIR: ${PLOT_DUMP_DIR_CONT}
    volumes:
      - ${PLOT_DUMP_DIR_HOST}:${PLOT_DUMP_DIR_CONT}:rw
    ports:
      - "${DASH_PORT}:8050"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8050/healthz"]
      interval: 10s
      timeout: 5s
      retries: 12
    restart: unless-stopped



networks:
  default:
    name: stacnet
